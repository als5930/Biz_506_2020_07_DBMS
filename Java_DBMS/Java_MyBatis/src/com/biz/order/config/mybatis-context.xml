<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
  
  <!-- mybatis-context.xml 파일은 mybatis를 사용하는 project에서 가장피수적으로 작성해야 하는 퍼일이다
  project가 시작될때 mybatis framework는 이파일의 정보를 시초로 SqlSessionFactory를 만들고 DB에 연결할수 있는 코드를 내부적으로 
  자동으로 생성하게 된다
  
  1. enviroment의 id 설정
  이설정 2개의 DB에 연결하는 정보를 한 프로젝트에서 사용할 경우 각 프로젝트의 설정을 식별하는 이름이다
  한 프로젝트에서 유일한 이름으로 설정을 해둔다 environments의 default 설정
  한프로젝트에서 여러개의 환경(environment)가 있더라도 동시에 사용은 어렵다
  프로젝트 한 프로젝트에서  한개의 DBMS에 연결하는것이 원칙이다
  때문에 default 값은 현재 프로젝트가 작동될때 사용할 DBMS 연결을 수행할 id값을 지정한다
  
   2.environment의 id 설정:
   2개 이상의 DB에 연결하는 정보를 한 프로젝트에서 사용할 경우 삿 프로젝트의 설정을 식별하는 이름이다
   한프로젝트에서 유일한 이름으로 설정을 해준다
  
  3. transactionManager
  	DB연동하여 SQL을 수행할때 다수의 SQL이 한개의 흐름에서 적용될때
  	이 SQL의 모든 실행이 완전히 수행됨을 보장하는 것으로 transactionManager이라는 것이 있다
  
  
  실제 트랜잭션을 코드에서 수행하려면 상당히 많은 부분의 코드가 필요하다
  잘못 설정하게 되면 흐름을 방해하고 프로젝트가 멈추는 현상까지 발생할수 있다
  
  mybatis를 사용하게 되면 지원되는 기능을 활용하여
  최소한 기본적은 트랜젝션은 몇가지 옵션만 지정하므로써 완성을 할수 있다
  
  transaction을 어떻게 수행할 것인가를 설정하는데 transaction을 JDBC 지원하는 기본값으로 설정한다
  이를위한 type에 JDBC값을 추가한다
  
  * tag self closing
  열리는 tag와 닫히는 tag가 반드시 쌍을 이루어서 문서를 만들어 하는데 
  별도로 element tag 가 필요 없는 경우는 열리는 tag 끝에 슬래시를 첨가하여
  닫히는 tag를 생략할수 있다
  
  4. dataSource
  DB에 연결하는데 필요하는 drvier, URL, username, password등의 정보 
  DBConnection을 만드는데 필요한 정보
  
  type :
  DBConnection을 수행하는데 사용할 관리자(Manager)을 무엇을 쓸것인가
  POOLED 관리자를 사용한다.
  
  POOLED 관리자:
  Mybatis 자체에서 프로젝트가 시작되면 일정한 개수의 Connection을 미리 만들어 두고 
  SQL 요천이 있으면 자동으로 사용하지 않는 Connection을 통해
  명령, 데이터를 교환할수 있도록 관리하는 클래스
  다른 Framework와 연동을 하면 다양한 관리자를 사용할수 있다
  
  5.property
  tag에 설정할 속성값이 많을 경우 별도로 property element tag를 사용하여 값들을 설정한다
  
  -->
<configuration>

		<typeAliases>
		<typeAlias 
			type="com.biz.order.model.OrderVO" 
			alias="OrderVO"/>
	</typeAliases>
	<environments default="oracle_datasource">
		<environment id="oracle_datasource">
		
		
			<transactionManager type="JDBC" />
			<dataSource type="POOLED">
			<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
			<property name="username" value="user2"/>
			<property name="password" value="user2"/>
			</dataSource>
			</environment>
			
			
		</environments >
		<mappers>
		<mapper resource="com/biz/order/mapper/order-mapper.xml"/>
		</mappers>
		
</configuration>